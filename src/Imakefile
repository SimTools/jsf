/************************************************************************/
/*									*/
/* Imakefile to build JSF libraries and application			*/
/*									*/
/* (Update)								*/
/*  4-Feb-2000 A.Miyamoto Include libJSFDMatrix, create shared library  */
/*          								*/
/*$Id:      								*/
/*       								*/
/************************************************************************/

/*----------------------------------------------------------------------*/
/*  Some macros specific to jsf	building				*/
/*----------------------------------------------------------------------*/

#include    "config/lclib.tmpl"
#include    "../conf/makejsf.tmpl"

CERNLIBS      = -L$(CERN_ROOT)/lib -ljetset74 -lpacklib

ROOTLIBS     += -lEGPythia -lEG -Wl,-u,pytest_ $(CERNLIBS)

LCLIBDIR      = $(LCLIBROOT)/lib

#ifdef hitachiArchitecture
EXTRALDOPT = -Wl,-a,default 
#endif

ANALLIB = -L$(LCLIBDIR) $(EXTRALDOPT) -lGENUTIL -lLUHADR -lTAUOLA \
        -lSIMJLC -lLTKCL -lLCFULL -lBASESV5.1 -lTBS \
        -lHELASV204 -lFORTLIB -lCOM -lCLI \
        $(EXTRALIBS)

EXTRADEFINES = -I$(LCLIBROOT)/simjlc/src -I$(LCLIBROOT)/util/fortlib/src 

INC           = ../include 

/*----------------------------------------------------------------------*/
/*  Source files, headers, and objects to build				*/
/*----------------------------------------------------------------------*/

SRCJSF        = JSFSteer.$(SrcSuf) JSFModule.$(SrcSuf) \
		JSFDBS.$(SrcSuf) JSFUtil.$(SrcSuf) \
		JSFEnv.$(SrcSuf) 

SRCJSFLCFULL  = JSFBases.$(SrcSuf) \
		JSFSpringParton.$(SrcSuf) JSFSpring.$(SrcSuf) \
		JSFReadParton.$(SrcSuf) JSFMergeEvent.$(SrcSuf) \
		JSFGeneratorParticle.$(SrcSuf) JSFGenerator.$(SrcSuf) \
		JSFFULLGenerator.$(SrcSuf) JSFHadronizer.$(SrcSuf) \
		JSFLCFULL.$(SrcSuf) \
		JSFReadGenerator.$(SrcSuf) \
		DebugGenerator.$(SrcSuf) DebugWGenerator.$(SrcSuf) \
		PythiaGenerator.$(SrcSuf) 

SRCJSFQUICKSIM= JSFQuickSimParam.$(SrcSuf) JSFQuickSim.$(SrcSuf) \
		JSFLTKCLTrack.$(SrcSuf) JSFSIMDST.$(SrcSuf) \
		JSFVTXHit.$(SrcSuf) JSFCALHit.$(SrcSuf) \
		JSFHelicalTrack.$(SrcSuf) JSFCDCTrack.$(SrcSuf) \
		JSFVirtualFit.$(SrcSuf) JSFGeoCFit.$(SrcSuf) \
		JSFVertexing.$(SrcSuf)


SRCJSFDMATRIX = JSFDMatrix.$(SrcSuf) JSFDMatrixUtils.$(SrcSuf) \
		JSFDVector.$(SrcSuf)

SRC	      = $(SRCJSF) $(SRCJSFLCFULL) $(SRCJSFQUICKSIM) \
		$(SRCJSFDMATRIX) $(SRCJSFBASES)

OBJJSF        = $(subst .$(SrcSuf),.$(ObjSuf),$(SRCJSF)) \
		libJSF.$(ObjSuf)

OBJJSFLCFULL  = $(subst .$(SrcSuf),.$(ObjSuf),$(SRCJSFLCFULL)) \
		readgenutil.o readparton.o \
		libJSFLCFULL.$(ObjSuf)

OBJJSFQUICKSIM= $(subst .$(SrcSuf),.$(ObjSuf),$(SRCJSFQUICKSIM)) \
		simdstutil.o \
		libJSFQuickSim.$(ObjSuf)

OBJJSFDMATRIX = $(subst .$(SrcSuf),.$(ObjSuf),$(SRCJSFDMATRIX))\
		libJSFDMatrix.$(ObjSuf)

HDRJSF	      = $(subst .$(SrcSuf),.$(HdrSuf),$(SRCJSF)) \
		JSFBasicClasses.h \
		JSFLinkDef.h

HDRJSFLCFULL  = $(subst .$(SrcSuf),.$(HdrSuf),$(SRCJSFLCFULL)) \
		JSFLCFULLLinkDef.h

HDRJSFQUICKSIM= $(subst .$(SrcSuf),.$(HdrSuf),$(SRCJSFQUICKSIM)) \
		JSFQuickSimLinkDef.h

HDRJSFDMATRIX = $(subst .$(SrcSuf),.$(HdrSuf),$(SRCJSFDMATRIX)) \
		JSFDMatrixLinkDef.h

HDR	      = $(HDRJSF) $(HDRJSFLCFULL) $(HDRJSFQUICKSIM) \
		$(HDRJSFDMATRIX) $(HDRJSFBASESSPRING)

/*----------------------------------------------------------------------*/
/*  Make targets							*/
/*----------------------------------------------------------------------*/

all::  libjsf libjsflcfull libjsfquicksim libjsfdmatrix jsf

libjsf: ../lib/libJSF.$(DllSuf)
../lib/libJSF.$(DllSuf): $(OBJJSF)
	@echo "Linking $@ "
	$(LD) $(SOFLAGS)  $(OBJJSF) -o libJSF.$(DllSuf)
	@mv libJSF.$(DllSuf) ../lib

libjsflcfull: ../lib/libJSFLCFULL.$(DllSuf) ../lib/libJSFLCFULL.a
../lib/libJSFLCFULL.$(DllSuf):   $(OBJJSFLCFULL)
	@echo "Linking $@ "
	$(LD) $(SOFLAGS)  $(OBJJSFLCFULL) -o $@

../lib/libJSFLCFULL.a:   $(OBJJSFLCFULL)
	@echo "Linking $@"
	@/bin/rm -f $@
	ar -r $@ $(OBJJSFLCFULL)

libjsfquicksim:     ../lib/libJSFQuickSim.$(DllSuf) ../lib/libJSFQuickSim.a
../lib/libJSFQuickSim.$(DllSuf):     $(OBJJSFQUICKSIM)
	@echo "Linking $@"
	$(LD) $(SOFLAGS)  $(OBJJSFQUICKSIM) -o $@

../lib/libJSFQuickSim.a:     $(OBJJSFQUICKSIM)
	@echo "Linking $@"
	@/bin/rm -f $@
	ar -r $@ $(OBJJSFQUICKSIM) 

libjsfdmatrix: ../lib/libJSFDMatrix.$(DllSuf)
../lib/libJSFDMatrix.$(DllSuf): $(OBJJSFDMATRIX)
	@echo "Linking $@"
	$(LD) $(SOFLAGS)  $(OBJJSFDMATRIX) -o $@


jsf: $(OBJS) jsfmain.o ../lib/libJSFGUI.so
	$(LD) jsfmain.o $(BLOCKDATA) \
	-L$(JSFROOT)/lib -lJSF -lJSFLCFULL -lJSFQuickSim -lJSFDMatrix \
	-lBasesSpring -lJSFGUI $(LDFLAGS) \
	 -o jsf
	@cp -p jsf ../bin
	@rm -f jsf
	@echo jsf was installed in ../bin/jsf

clean:: 
	@rm -f $(OBJS) core *.so *~
	@rm -f libJSF.$(SrcSuf) libJSF.h
	@rm -f libJSFLCFULL.$(SrcSuf) libJSFLCFULL.h
	@rm -f libJSFQuickSim.$(SrcSuf) libJSFQuickSim.h
	@rm -f libJSFDMatrix.$(SrcSuf) libJSFDMatrix.h

depend:: $(SRC) $(HDR)
	for i in $(SRC); do \
	rmkdepend -a -- $(DEPENDFILES) -- $$i; done

distclean:: clean
	@rm -f $(OBJS) core *~ *.o
	@rm -f PYTHIA.SEED *.bak *.a
	@rm -f jsf *.root Makefile 

web:
	../bin/jsf -q -b html.C

libJSF.$(SrcSuf): $(HDRJSF)
		@echo "Generating dictionary ..."
		rootcint -f libJSF.$(SrcSuf) -c $(HDRJSF)
libJSFLCFULL.$(SrcSuf): $(HDRJSFLCFULL)
		@echo "Generating dictionary ..."
		rootcint -f libJSFLCFULL.$(SrcSuf) -c $(HDRJSFLCFULL)
libJSFQuickSim.$(SrcSuf): $(HDRJSFQUICKSIM)
		@echo "Generating dictionary ..."
		rootcint -f libJSFQuickSim.$(SrcSuf) -c $(HDRJSFQUICKSIM)
libJSFDMatrix.$(SrcSuf): $(HDRJSFDMATRIX)
		@echo "Generating dictionary ..."
		rootcint -f libJSFDMatrix.$(SrcSuf) -c $(HDRJSFDMATRIX)

JSFConfig.h: ../conf/jsf.version ../bin/makespec
	../bin/makespec 


../lib/libJSFGUI.so:
	( cd $(JSFROOT)/example/guiexam1 ; xmkmf -a ; make )
