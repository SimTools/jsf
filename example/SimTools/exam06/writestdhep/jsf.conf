##############################################################
#
#  Example jsf.conf to run Physsim generator and create
#  stdhep file 
#
##############################################################

# Setting to create stdhep file using physsim generators

JSFGUI.SimulationType: 0 
#!simtype
#  Run only simulation

JSFGUI.OutputFileName:/dev/null
#!OutputFile

JSF.SharedLibraries:libJSFReadStdHep.so:libJSFBeamGeneration.so:libS4Utils.so:libAnlib.so:libJSFAnlib.so
# Need to include libraries for Beamstrahlung, Bases/Spring and StdHep intterface

JSFGUI.Spring.SharedLibrary:../prod/WWSpring.so
# A name of shared library for event generation by Bases/Spring.

####################################################
# Optional parameters for JSFWriteJSF class
####################################################
JSFWriteStdHep.OutputFileName:file.stdhep
#!stdhep

JSFWriteStdHep.OutputTitle:sample
#!stdhep-title
# Title of data, which is written in the stdhep file.

JSFWriteStdHep.NTries:10
#!stdhep-ntries
# Number of events in this file. 

JSFWriteStdHep.DebugLevel:0
#!stdhep-debug
#  Debug level of JSFWriteStdHep class

JSFWriteStdHep.EventSource: 2
# generator input data
#  =0 : /hepevt/ common block
#  =1 : /jetset/ are converted to /hepevt/ and written to stdhep
#  =2 : JSFGeneratorBuf are stored to /hepevt/, then written to 
#       stdhep file.
#

JSFWriteStdHep.ProcessID:0
#!processid
#  ProcessID which is written to then file, when HEPEV4 
#  is not prepared.
#

JSFGUI.NEventsAnalize: 10
#!maxevt

####################################################
#  Parameters for Bases/Spring
####################################################
JSFGUI.Spring.ModuleName:WWSpring
# A module name of Spring

JSFGUI.Spring.BasesFile:../prod/bases.root
# A file name of bases data.

JSFBeamGeneration.FileName:/proj/soft/data5/samples/gen/bsdata/500_nominal.root
#JSFBeamGeneration.FileName:/proj/soft/jsf/share/bsdata/500_nominal.root

JSFBeamGeneration.ParName:500_nominal
JSFBeamGeneration.Width:0.0005

WWBases.ISRBM:		3
WWBases.ACC1:		0.2
WWBases.ACC2:		0.05
WWBases.ITMX1:		5
WWBases.ITMX2:		50
WWBases.NCALL:		80000
WWBases.Roots:		350.
WWBases.PolElectron:	0.0
WWBases.SigmaEbeam:	0.005
# W- decay modes
#   1,2,3: (e,mu,tau)
#   4,-12: (ud,cd,td, us,cs,ts, ub,cb,tb)

WWBases.WmModesLo:	1
WWBases.WmModesHi:	12
WWBases.WpModesLo:	1
WWBases.WpModesHi:	12
JSFGUI.InputFileName: wwsim.root
# JSFGUI.InputFileName: /:/ea0/simdst/hiux/zh300gev.1kev.root
# DisplayType=0 Display LTKCLTrack in momentum display
# DisplayType=1 Display Signals in coordinate space.

JSFEventDisplay.DisplayType:    1
JSFGUI.RunMode:1
#  EventType 0=Pythia, 1=debug generator

JSFGUI.EventType:2
JSFGUI.InitPythiaMacro: InitPythia.C
JSFGUI.MacroFileName: UserAnalysis.C
JSFGUI.ShowHist:  no
JSFGUI.ShowHistFrequency: 1
JSFGUI.FirstEvent: 1
JSFEventDisplay.ViewRange:  -200.0, -200.0, -200.0, 200.0, 200.0, 200.0
JSFEventDisplay.DrawAtNewEvent: yes
JSFEventDisplay.VTXViewRadius: 10.0
JSFEventDisplay.LTKCLTrackColor.Electron:  2
JSFEventDisplay.LTKCLTrackColor.Muon:      1
JSFEventDisplay.LTKCLTrackColor.PureGamma: 7
JSFEventDisplay.LTKCLTrackColor.GammaInMixedEMC: 8
JSFEventDisplay.LTKCLTrackColor.NeutralHadron:    3
JSFEventDisplay.LTKCLTrackColor.HadronInMixedHDC:    4
JSFEventDisplay.LTKCLTrackColor.ChargedHadron:    5
JSFEventDisplay.LTKCLTrackColor.Unclassified:    9
JSFEventDisplay.GenNeutral.Color:   43
JSFEventDisplay.GenCharged.Color:   7
# JSFEventDisplay.GenCharged.Color:   -1
#  If color code is negative color code = track number, if track < 50

JSFEventDisplay.GenNeutral.Show:   NO
JSFEventDisplay.GenCharged.Show:   NO
JSFEventDisplay.EMCHit.Show:   YES
JSFEventDisplay.EMCHit.Color:   4
JSFEventDisplay.HDCHit.Color:   5
JSFEventDisplay.VTXHit.Color:   2
JSFEventDisplay.CDCTrack.Color:   3 
JSFEventDisplay.CDCTrack.Show:   YES
JSFEventDisplay.EMCScale:   2.0
JSFEventDisplay.HDCScale:   2.0

