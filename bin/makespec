#!/bin/bash -f
# ###################################################
#
# This script stores system information in config file.
#
#(Author)
#  Akiya Miyamoto  15-April-1999   Original version
#  A.Miyamoto  25-June-1999  Create src/JSFConfig.h, instead of conf/spec
#$Id$
#
# ###################################################

# ##################################################
error_message(){
  echo "System configuration error.."
  echo "Environment variable, JSFROOT, is not set,"
  echo "root command is not found or g77 is not found."
  exit
}

# ##################################################
exit_message(){
  echo "System information is saved in $1"
  exit
}



# #######################################################################
# Check major version number of pythia used by JSF and LCLIB
check_pythia()
{
  if [ X$LCLIBROOT == X ] ; then
    echo "**** Fatal Error : Pythia major number check failed.***********"
    echo "LCLIBROOT environment parameter is not set"
    exit 1
  fi
  LCLIB_PYTHIA_VERSION=`grep PYTHIA_VERSION $LCLIBROOT/config/configure.in | grep -v "#" | sed -e "s/ //g" | cut -d"=" -f2`
  echo "LCLIB($LCLIBROOT) is configured to use Pythia$LCLIB_PYTHIA_VERSION"
  echo "JSF is configured to use Pythia$PYTHIA_VERSION"

  if [ X$LCLIB_PYTHIA_VERSION != X$PYTHIA_VERSION ] ; then
    echo "**** Fatal Error : Pythia major number check failed.***********"
    echo "Pythia version of LCLIB and JSF is not consistent"
    echo "LCLIB Pythia version is specified by a file, $LCLIBROOT/config/configure.in"
    echo "JSF Pythia version is specified by a file, $JSFROOT/conf/configure.in"
    echo "Modify these files and make libraries again"
    exit 1
  fi

  echo "Pythia major version check....OK"
  echo "Makesure Pythia library used to build ROOT is same as those used by JSF"
  return 0
}

# ########################################################################
#
# Get GCC version number
#
# ########################################################################

gcppversion()
{

cat > temp.cxx <<EOF
#include <stdio.h>
main()
{
 char *date=__DATE__;
 char *time=__TIME__;
 printf("#define __JSF_CONFIG_DATE__ \"%s\"\n",date);
 printf("#define __JSF_CONFIG_TIME__ \"%s\"\n",time);

}
EOF

g++ temp.cxx
./a.out

rm -f temp.cxx a.out

}


# ############################################
#
# Main shell
#
# ############################################

LANG=C

if [ $# -ne 0 ] ; then
  jsfroot=$1
else
  if [ "X$JSFROOT" == "X" ] ; then
    echo "Environment parameter, JSFROOT, is not set yet"
    exit -1
  elif [ "X$LCBASEDIR" == "X" ] ; then
    echo "Environment parameter, LCBASEDIR, is not set yet"
    exit -1
  elif [ "X$IMAKEINCLUDE" == "X" ] ; then
    echo "Environment parameter, IMAKEINCLUDE, is not set yet"
    exit -1
  elif [ "X$LCLIBROOT" == "X" ] ; then
    echo "Environment parameter, LCLIBROOT, is not set yet"
    exit -1
  fi
  jsfroot=$JSFROOT
fi

if [ "`which root | grep -c root`" == 0 ] ; then
  error_message
fi

# ---------------------------------------------
# Make sure to use same Pythia version for LCLIB, JSF
# check_pythia

# ----------------------------------------------

echo -n "Creating system information ."
specfile=$jsfroot/include/JSFConfig.h
mkdir -p $jsfroot/include

echo "#ifndef __JSFCONFIG__" > $specfile
echo "#define __JSFCONFIG__" >> $specfile

# ---------------------------------------------

echo -n "JSF version .."
cat $JSFROOT/conf/jsf.version | grep -v XCOMM >> $specfile

echo "#define __LICLIBRAN_ISNOTUSED__ 1" >> $specfile

# jlcsim
if [ -e $JLCSIMROOT/lib/libjimlib.a ] ; then
    echo "#define __JLCSIM_INSTALLED__ 1"  >> $specfile
fi

############################################3
# Set gcc version information
############################################3
if [ -f `which g++` -a "$systype" != "AIX" ] ; then
  echo -n "g++ version .. "
  gcppversion >> $specfile
fi

echo "#include \"LCBASEConfig.h\"" >> $specfile

echo "#endif" >> $specfile
echo " "
echo "makespec command finished"


